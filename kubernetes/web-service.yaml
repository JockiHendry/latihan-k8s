apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular-web
  labels:
    app.kubernetes.io/name: angular-web
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/component: web-server
    app.kubernetes.io/part-of: angular-web
    env: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: angular-web
      app.kubernetes.io/version: v0.0.1
      env: staging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: angular-web
        app.kubernetes.io/version: v0.0.1
        app.kubernetes.io/component: web-server
        app.kubernetes.io/part-of: angular-web
        env: staging
    spec:
      containers:
        - name: angular-web
          image: 'ghcr.io/jockihendry/latihan-k8s-angular-web:edge' # kpt-set: ghcr.io/jockihendry/latihan-k8s-angular-web:${web_service_version}
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            httpGet:
              path: /index.html
              port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: angular-web
  labels:
    app.kubernetes.io/name: angular-web
    app.kubernetes.io/version: v0.0.1
    app.kubernetes.io/component: web-server
    app.kubernetes.io/part-of: angular-web
    env: staging
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: angular-web
    app.kubernetes.io/version: v0.0.1
    env: staging
  ports:
    - name: http
      port: 80
