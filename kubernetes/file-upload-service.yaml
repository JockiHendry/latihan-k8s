apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: file-upload-service
  labels:
    app.kubernetes.io/name: file-upload-service
    app.kubernetes.io/component: app-server
    app.kubernetes.io/part-of: file-upload-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: file-upload-service
  serviceName: file-upload-service-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: file-upload-service
        app.kubernetes.io/component: app-server
        app.kubernetes.io/part-of: file-upload-service
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: file-upload-service
          image: 'ghcr.io/jockihendry/latihan-k8s-file-upload-service:edge' # kpt-set: ghcr.io/jockihendry/latihan-k8s-file-upload-service:${file_upload_service_version}
          imagePullPolicy: Never
          env:
            - name: RABBITMQ_USER
              value: 'user'
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
          livenessProbe:
            tcpSocket:
              port: 7070
          volumeMounts:
            - name: uploads
              mountPath: /uploads
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
        - name: nginx
          image: 'nginx:1.21-alpine'
          ports:
            - name: web
              containerPort: 8080
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: uploads
              mountPath: /uploads
      volumes:
        - name: nginx-config
          configMap:
            name: file-upload-service-nginx-config
            items:
              - key: nginx.conf
                path: file-upload-service.conf
        - name: uploads
          persistentVolumeClaim:
            claimName: file-upload-storage-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: file-upload-service-nginx-config
  labels:
    app.kubernetes.io/name: file-upload-service-nginx-config
    app.kubernetes.io/component: app-server
    app.kubernetes.io/part-of: file-upload-service
data:
  nginx.conf: |
    server {
      listen 8080;
      location ~* ^/.*/upload$ {
        uwsgi_pass 127.0.0.1:7070;
        client_max_body_size 50m;
        include uwsgi_params;
      }
      location / {
        root /uploads;
        sendfile on;
        tcp_nopush on;
        aio on;
        limit_rate 1m;
        sendfile_max_chunk 1m;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: file-upload-service
  labels:
    app.kubernetes.io/name: file-upload-service
    app.kubernetes.io/component: app-server
    app.kubernetes.io/part-of: file-upload-service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: file-upload-service
  ports:
    - name: http
      port: 8080
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: file-upload-storage
spec:
  capacity:
    storage: 100Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: file-upload-storage-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Mi
  storageClassName: local-storage
